# Telegraf Configuration
#
# THIS FILE IS MANAGED BY PUPPET
#
<% if @global_tags -%>
[global_tags]
<%   @global_tags.sort.each do |key, value| -%>
  <%= key %> = "<%= value %>"
<%   end -%>
<% end -%>

[agent]
  hostname = "<%= @hostname %>"
  omit_hostname = <%= @omit_hostname %>
  interval = "<%= @interval %>"
  round_interval = <%= @round_interval %>
  metric_batch_size = <%= @metric_batch_size %>
  metric_buffer_limit = <%= @metric_buffer_limit %>
  collection_jitter = "<%= @collection_jitter %>"
  flush_interval = "<%= @flush_interval %>"
  flush_jitter = "<%= @flush_jitter %>"
  logfile = "<%= @logfile %>"
  debug = <%= @debug %>
  quiet = <%= @quiet %>

<% if @_outputs -%>
#
# OUTPUTS:
#
<%   @_outputs.sort.each do | output, options | -%>
[[outputs.<%= output %>]]
<%      unless options == nil -%>
<%          options.sort.each do | option, value | -%>
  <%= option -%> = <% if value.is_a?(String) %>"<%= value %>"<% elsif value.is_a?(Array) %><%= value.inspect %><% else %><%= value %><% end %>
<%          end -%>
<%      end -%>
<%   end -%>
<% end -%>

<% if @_inputs -%>
#
# INPUTS:
#
<%   @_inputs.sort.each do | input, options | -%>
[[inputs.<%= input %>]]
<%      unless options == nil -%>
<%          options.sort.each do | option, value | -%>
  <%= option -%> = <% if value.is_a?(String) %>"<%= value %>"<% elsif value.is_a?(Array) %><%= value.inspect %><% else %><%= value %><% end %>
<%          end -%>
<%      end -%>
<%   end -%>
<% end -%>

<% if scope.lookupvar('::operatingsystem') == 'Darwin' -%>
[[inputs.exec]]
  # trailing comma, add boottime following
  commands = [
    "/bin/bash -c \"printf \\\"thermal %sboottime=$(/usr/sbin/sysctl -n kern.boottime | cut -d' ' -f4 | cut -d',' -f1)\\\" $(printf \\\"%s\\\" $(/usr/bin/pmset -g therm 2>/dev/null | sed -Ee '/^Note/d' -e 's/.*(CPU[^ ]*)[[:space:]=]*([0-9]+)/\\1=\\2,/'))\""
  ]
  timeout = "60s"
  data_format = "influx"

[[inputs.exec]]
  # trailing comma, add boottime following
  commands = [
    "/bin/bash -c \"printf \\\"thermal %sboottime=$(/usr/sbin/sysctl -n kern.boottime | cut -d' ' -f4 | cut -d',' -f1)\\\" $(/usr/sbin/sysctl -ie machdep.xcpm.cpu_thermal_level machdep.xcpm.gpu_thermal_level machdep.xcpm.io_thermal_level | awk $'/=/{printf $1$2$3\\\",\\\"}')\""
  ]
  timeout = "60s"
  data_format = "influx"
<% end -%>
